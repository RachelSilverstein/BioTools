paste(c(working_dir, "dot.ps"), collapse = "")
paste(c(working_dir, "/dot.ps"), collapse = "")
source('~/Documents/BioTools/R/RNAfold.R', echo=TRUE)
RNAfold(c("AAAAUAUUUUUUUAUAUAUUUUUUUAAAAAAA", "CCCCCTTTTTCTATTTTAAAAAAAAUUUUUU"))
roxygen2::roxygenise()
?assert
??assert
?assertthat::assert_that
?stopifnot
?stop
?seq
seq(5, 7)
?paste
wt_sequence <- 'AACCATTAC'
start <- 4
stop <- 6
wt <- 'CAT'
mut <- 'ATC'
sequence <- strsplit(wt_sequence, split = "")
wt <- strsplit(wt, split = "")
mut <- strsplit(mut, split = "")
stopifnot(sequence[seq(start, stop)] == wt)
sequence[seq(start, stop)] <- mut
sequence <- paste(sequence, sep = "", collapse = "")
sequence <- strsplit(wt_sequence, split = "")
wt <- unlist(strsplit(wt, split = ""))
mut <- unlist(strsplit(mut, split = ""))
stopifnot(sequence[seq(start, stop)] == wt)
sequence[seq(start, stop)] <- mut
sequence <- paste(sequence, sep = "", collapse = "")
start <- 4
stop <- 6
mut <- 'ATC'
wt <- 'CAT'
wt_sequence <- 'AACCATTAC'
sequence <- strsplit(wt_sequence, split = "")
wt <- unlist(strsplit(wt, split = ""))
mut <- unlist(strsplit(mut, split = ""))
stopifnot(sequence[seq(start, stop)] == wt)
sequence[seq(start, stop)] <- mut
sequence <- paste(sequence, sep = "", collapse = "")
print(wt)
sequence[seq(start, stop)]
seq(start, stop)
4:7
sequence[4:7]
sequence[c(start:stop)]
c(start:stop)
sequence <- unlist(strsplit(wt_sequence, split = ""))
wt <- unlist(strsplit(wt, split = ""))
mut <- unlist(strsplit(mut, split = ""))
stopifnot(sequence[c(start:stop)] == wt)
sequence[seq(start, stop)] <- mut
sequence <- paste(sequence, sep = "", collapse = "")
sequence
source('~/Documents/BioTools/R/mutate.R', echo=TRUE)
mutate("AAACATGGG", start = 4, stop = 6, wt = 'CAT', mut = 'GGC')
source('~/Documents/BioTools/R/mutate.R', echo=TRUE)
mutate("AAACATGGG", start = 4, stop = 6, wt = 'CAT', mut = 'GGC')
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::install_github()
?devtools::install_github()
if (!require(BioTools)) {
install_github("BioTools", "RachelSilverstein")
}
install_github("BioTools", "RachelSilverstein")
if (!require(devtools)) {
install.packages("devtools")
}
library(devtools)
install_github("BioTools", "RachelSilverstein")
install_github("RachelSilverstein/BioTools")
?RNAfold
?BioTools::RNAfold
installed.packages()
!require(BioTools)
require(BioTools)
exists(BioTools)
existsFunction(mutateSeq)
existsFunction('mutateSeq')
library(BioTools)
?RNAfold
if (!existsFunction('mutateSeq')) {
install_github("RachelSilverstein/BioTools")
}
RNAfold("AAAAAA")
roxygen2::roxygenise()
wt_sequence = "CATCAT"
variant = FALSE, start = NULL, stop = NULL, wt = NULL, mut = NULL
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
?all.equal
1 == 1 == 2
wt_sequence <- c('AAA', "CCC")
start <- c(1,2)
stop <- c(2, 3)
wt <- c("AA", "CC")
wt_sequence <- c('AAC', "GCC")
mut <- c('GG', 'AA')
wt <- unlist(strsplit(wt, split = ""))
wt
wt <- c("AA", "CC")
wt <- strsplit(wt, split = "")
wt
wt <- c("AA", "CC")
wt <- as.vector(strsplit(wt, split = ""))
wt
typeof(wt)
wt <- strsplit(wt, split = "")
wt <- c("AA", "CC")
wt <- strsplit(wt, split = "")
wt
l <- length(wt_sequence)
stopifnot((length(start) == l) & (length(stop) == l) & (length(mut) == l))
sequence <- strsplit(wt_sequence, split = "")
sequence
?lapply
for (i in seq_along(wt_sequence)) {
stopifnot(wt_sequence[[i]][start[i]:stop[i]] == wt)
}
wt_sequence[[i]]
start[i]
stop[i]
for (i in seq_along(wt_sequence)) {
stopifnot(wt_sequence[[i]][start[i]:stop[i]] == wt[[i]])
}
wt[[i]]
wt_sequence[[i]][start[i]:stop[i]]
wt_sequence[[i]]
start[i]
stop[i]
wt <- strsplit(wt, split = "")
for (i in seq_along(wt_sequence)) {
stopifnot(wt_sequence[[i]][start[i]:stop[i]] == wt[[i]])
}
wt
wt_sequence <- strsplit(wt_sequence, split = "")
wt <- strsplit(wt, split = "")
for (i in seq_along(wt_sequence)) {
stopifnot(wt_sequence[[i]][start[i]:stop[i]] == wt[[i]])
}
wt_sequence <- c('AAC', "GCC")
start <- c(1,2)
stop <- c(2, 3)
wt <- c("AA", "CC")
mut <- c('GG', 'AA')
l <- length(wt_sequence)
stopifnot((length(start) == l) & (length(stop) == l) & (length(mut) == l))
wt_sequence <- strsplit(wt_sequence, split = "")
stopifnot(length(wt) == l)
wt <- strsplit(wt, split = "")
for (i in seq_along(wt_sequence)) {
stopifnot(wt_sequence[[i]][start[i]:stop[i]] == wt[[i]])
}
wt_sequence[[i]][start[i]:stop[i]]
wt[[i]]
mut <- strsplit(mut, split = "")
mut
for (i in seq_along(mut)) {
stopifnot(length(mut[[i]]) == stop[i] - start[i] + 1)
}
length(mut[[i]])
stop[i]
start[i]
stop[i] - start[i] + 1
for (i in seq_along(sequences)) {
sequences[[i]][start[i]:stop[i]] <- mut[[i]]
}
sequences <- c('AAC', "GCC")
start <- c(1,2)
stop <- c(2, 3)
wt <- c("AA", "CC")
mut <- c('GG', 'AA')
l <- length(sequences)
stopifnot((length(start) == l) & (length(stop) == l) & (length(mut) == l))
sequences <- strsplit(sequences, split = "")
if (!is.null(wt)) { # if you provided a wt vector
stopifnot(length(wt) == l)
wt <- strsplit(wt, split = "")
for (i in seq_along(sequences)) {
stopifnot(sequences[[i]][start[i]:stop[i]] == wt[[i]])
}
}
mut <- strsplit(mut, split = "")
for (i in seq_along(mut)) {
stopifnot(length(mut[[i]]) == stop[i] - start[i] + 1)
}
for (i in seq_along(sequences)) {
sequences[[i]][start[i]:stop[i]] <- mut[[i]]
}
sequences
sequences
return(sequences)
sequences <- c('AAC', "GCC")
sequences <- strsplit(sequences, split = "")
sequences
sequences <- paste(sequences, sep = "")
sequences
?paste0
sequences <- c('AAC', "GCC")
sequences <- strsplit(sequences, split = "")
sequences <- paste0(sequences)
sequences
sequneces[1]
sequences[1]
sequences <- c('AAC', "GCC")
sequences <- strsplit(sequences, split = "")
sequences <- lapply(sequences, paste(x, sep = ""))
?lapply(
)
f <- function (x) paste(x, sep = "")
sequences <- lapply(sequences, f)
sequences
f <- function (x) paste(x, sep = "", cat = "")
sequences <- lapply(sequences, f)
sequences
x <- list(c("a", "B"))
x
paste(x, sep="")
x <- list(c("a", "B"))
paste(x, cat="")
?paste
x <- c("a", "b")
paste(x)
paste(x, collapse = "")
f <- function (x) paste(x, sep = "", collapse = "")
sequences <- lapply(sequences, f)
sequences
sequences <- c('AAC', "GCC")
sequences <- strsplit(sequences, split = "")
sequences
paste(sequences, collapse = "")
source('~/Documents/BioTools/R/mutateSeq.R', echo=TRUE)
mutateSeqs(sequences = c('AAC', "GCC"), start = c(1,2), stop = c(2, 3), wt = c("AA", "CC"), mut = c('GG', 'AA'))
source('~/Documents/BioTools/R/mutateSeq.R', echo=TRUE)
mutateSeqs(sequences = c('AAC', "GCC"), start = c(1,2), stop = c(2, 3), wt = c("AA", "CC"), mut = c('GG', 'AA'))
roxygen2::roxygenize
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize
roxygen2::roxygenize()
roxygen2::roxygenize
roxygen2::roxygenize()
if (!require(devtools)) {
install.packages("devtools")
}
library(devtools)
if (!existsFunction('mutSeqs')) {
install_github("RachelSilverstein/BioTools")
}
library(BioTools)
if (!variant) {
sequence <- wt_sequence
} else {
if (is.null(start) | is.null(stop) | is.null(wt) | is.null(mut)) {
stop("Variant details missing.")
} else {
sequence <- mutate(wt_sequence, start =  start, stop = stop, wt = wt, mut = mut)
}
}
wt_sequences = c("AAAAAA", "UUUUUUUU")
variants = TRUE
start = c(1, 2)
stop = c(2, 3)
c("AA", "UU")
c("GG", "CC")
if (!variant) {
sequence <- wt_sequences
} else {
if (is.null(start) | is.null(stop) | is.null(wt) | is.null(mut)) {
cat("Variant details missing.")
stop()
} else {
sequence <- mutate(wt_sequences, start =  start, stop = stop, wt = wt, mut = mut)
}
}
if (!variants) {
sequence <- wt_sequences
} else {
if (is.null(start) | is.null(stop) | is.null(mut)) {
cat("Variant details missing.")
stop()
} else {
sequence <- mutate(wt_sequences, start =  start, stop = stop, wt = wt, mut = mut)
}
}
if (!variants) {
sequence <- wt_sequences
} else {
if (is.null(start) | is.null(stop) | is.null(mut)) {
cat("Variant details missing.")
stop()
} else {
sequence <- mutSeqs(wt_sequences, start =  start, stop = stop, wt = wt, mut = mut)
}
}
sequences <- wt_sequences
l <- length(sequences)
stopifnot((length(start) == l) & (length(stop) == l) & (length(mut) == l))
sequences <- strsplit(sequences, split = "")
if (!is.null(wt)) { # if you provided a wt vector
stopifnot(length(wt) == l)
wt <- strsplit(wt, split = "")
for (i in seq_along(sequences)) {
stopifnot(sequences[[i]][start[i]:stop[i]] == wt[[i]])
}
}
wt
sequences <- strsplit(sequences, split = "")
sequences
wt
for (i in seq_along(sequences)) {
stopifnot(sequences[[i]][start[i]:stop[i]] == wt[[i]])
}
varFold(wt_sequences = c("AAAAAA", "UUUUUUUU"), variants = TRUE, start = c(1, 2), stop = c(2, 3), wt = c("AA", "UU"), mut = c("GG", "CC"))
source('~/Documents/BioTools/R/varFold.R', echo=TRUE)
varFold(wt_sequences = c("AAAAAA", "UUUUUUUU"), variants = TRUE, start = c(1, 2), stop = c(2, 3), wt = c("AA", "UU"), mut = c("GG", "CC"))
View(varFold)
wt_sequences = c("AAAAAA", "UUUUUUUU")
variants = TRUE
start = c(1, 2)
stop = c(2, 3)
wt = c("AA", "UU")
mut = c("GG", "CC")
if (!require(devtools)) {
install.packages("devtools")
}
library(devtools)
if (!existsFunction('mutSeqs')) {
install_github("RachelSilverstein/BioTools")
}
library(BioTools)
if (!variants) {
sequences <- wt_sequences
} else {
if (is.null(start) | is.null(stop) | is.null(mut)) {
cat("Variant details missing.")
stop()
} else {
sequences <- mutSeqs(wt_sequences, start =  start, stop = stop, wt = wt, mut = mut)
}
}
sequences
raw_output <- RNAfold(sequences)
raw_output
raw_output <- BioTools::RNAfold(sequences)
raw_output
seq1 <- "AAAAAAGUUUGGGGGGCCCCCCTTTTTT"
seq2 <- "UUUUUUUUAAAAAAAUUUUUUUUAAAAAAAAUUUUUUUUAAAAAAAA"
sequences = c(seq1, seq2)
BioTools::RNAfold(sequences)
roxygen2::roxygenize()
roxygen2::roxygenize()
MFE <- gsub("([^()]*)", raw_output)
MFE <- gsub(pattern = "([^()]*)", replace = "", x = raw_output)
MFE
MFE <-gsub("[\\(\\)]", "", regmatches(raw_output, gregexpr("\\(.*?\\)", j))[[1]])
MFE <-gsub("[\\(\\)]", "", regmatches(raw_output, gregexpr("\\(.*?\\)", raw_output))[[1]])
MFE
k <- str_extract_all(raw_output, "\\([^()]+\\)")[[1]]
library(stringr)
k <- str_extract_all(raw_output, "\\([^()]+\\)")[[1]]
# Remove parenthesis
k
library(stringr)
# Get the parenthesis and what is inside
k <- str_extract_all(raw_output, "\\([^()]+\\)")
k
k <- substring(k, 2, nchar(k)-1)
k
raw_output <- BioTools::RNAfold(sequences)
# interpret the raw output
library(stringr)
# Get the parenthesis and what is inside
MFE <- str_extract_all(raw_output, "\\([^()]+\\)")
# Remove parenthesis
MFE <- substring(MFE, 2, nchar(k)-1)
MFE
raw_output <- BioTools::RNAfold(sequences)
# interpret the raw output
library(stringr)
# Get the parenthesis and what is inside
MFE <- str_extract_all(raw_output, "\\([^()]+\\)")
MFE
MFE <- unlist(MFE)
MFE
raw_output
MFE <- str_extract_all(raw_output, "\\([^()]+\\)$")
MFE <- unlist(MFE)
MFE
MFE <- gsub(pattern = "[()]", replacement = "", MFE) # remove parentheses
MFE
MFE <- as.numeric(MFE)
MFE
MFE[1]
FEE <- str_extract_all(raw_output, "\\[[^()]+\\]$")
FEE <- unlist(FEE)
FEE
FEE <- gsub(pattern = "[[]]", replacement = "", FEE)
FEE
FEE <- gsub(pattern = "[\\[\\]]", replacement = "", FEE)
FEE
FEE <- gsub(pattern = "[\\[\\]]", replacement = "", FEE)
FEE
FEE <- gsub(pattern = "[\[\]]", replacement = "", FEE)
FEE <- gsub(pattern = "\\[", replacement = "", FEE)
FEE <- as.numeric(FEE)
FEE <- str_extract_all(raw_output, "\\[[^()]+\\]$")
FEE <- unlist(FEE)
FEE <- gsub(pattern = "\\[", replacement = "", FEE)
FEE
FEE <- gsub(pattern = "\\]", replacement = "", FEE)
FEE <- as.numeric(FEE)
FEE
?data.frame
result <- data.frame(c(MFE,FEE))
result
result <- data.frame(MFE, FEE)
result
ensFE <- str_extract_all(raw_output, "\\[[^()]+\\]$")
ensFE <- unlist(ensFE)
ensFE <- gsub(pattern = "\\[", replacement = "", ensFE)
ensFE <- gsub(pattern = "\\]", replacement = "", ensFE)
ensFE <- as.numeric(ensFE)
result <- data.frame(MFE, ensFE)
result
seq1 <- "AAAAAAGUUUGGGGGGCCCCCCTTTTTT"
seq2 <- "UUUUUUUUAAAAAAAUUUUUUUUAAAAAAAAUUUUUUUUAAAAAAAA"
wt_data <- varFold(wt_sequences = c(seq1, seq2), variants = TRUE, start = c(1, 2), stop = c(2, 3), wt = c("AA", "UU"), mut = c("GG", "CC"))
wt_data
source('~/Documents/BioTools/R/varFold.R', echo=TRUE)
seq1 <- "AAAAAAGUUUGGGGGGCCCCCCTTTTTT"
seq2 <- "UUUUUUUUAAAAAAAUUUUUUUUAAAAAAAAUUUUUUUUAAAAAAAA"
wt_data <- varFold(wt_sequences = c(seq1, seq2), variants = TRUE, start = c(1, 2), stop = c(2, 3), wt = c("AA", "UU"), mut = c("GG", "CC"))
source('~/Documents/BioTools/R/varFold.R', echo=TRUE)
wt_data <- varFold(wt_sequences = c(seq1, seq2), variants = TRUE, start = c(1, 2), stop = c(2, 3), wt = c("AA", "UU"), mut = c("GG", "CC"))
wt_data
MFEwt <- wt_data$MFE
ensFEwt <- wt_data$ensFE
MFEwt
ensFEwt
source('~/Documents/BioTools/R/varFold.R', echo=TRUE)
seq1 <- "AAAAAAGUUUGGGGGGCCCCCCTTTTTT"
seq2 <- "UUUUUUUUAAAAAAAUUUUUUUUAAAAAAAAUUUUUUUUAAAAAAAA"
wt_data <- varFold(wt_sequences = c(seq1, seq2), variants = FALSE)
MFEwt <- wt_data$MFE
ensFEwt <- wt_data$ensFE
var_data <- varFold(wt_sequences = c(seq1, seq2), variants = TRUE, start = c(1, 2), stop = c(2, 3), wt = c("AA", "UU"), mut = c("GG", "CC"), MFEwt = MFEwt, ensFEwt = ensFEwt)
wt_data
var_data
roxygen2::roxygenise()
source('~/Documents/BioTools/R/varFold.R', echo=TRUE)
seq1 <- "AAAAAAGUUUGGGGGGCCCCCCTTTTTT"
seq2 <- "UUUUUUUUAAAAAAAUUUUUUUUAAAAAAAAUUUUUUUUAAAAAAAA"
wt_data <- varFold(wt_sequences = c(seq1, seq2), variants = FALSE)
MFEwt <- wt_data$MFE
ensFEwt <- wt_data$ensFE
wt_dat
wt_data
var_data <- varFold(wt_sequences = c(seq1, seq2), variants = TRUE, start = c(1, 2), stop = c(2, 3), wt = c("AA", "UU"), mut = c("GG", "CC"), MFEwt = MFEwt, ensFEwt = ensFEwt)
var_data
roxygen2::roxygenise()
seq1 <- "AAAAAAGUUUGGGGGGCCCCCCTTTTTT"
seq2 <- "UUUUUUUUAAAAAAAUUUUUUUUAAAAAAAAUUUUUUUUAAAAAAAA"
wt_data <- varFold(wt_sequences = c(seq1, seq2), variants = FALSE)
wt_data
MFEwt <- wt_data$MFE
ensFEwt <- wt_data$ensFE
var_data <- varFold(wt_sequences = c(seq1, seq2), variants = TRUE, start = c(1, 2), stop = c(2, 3), wt = c("AA", "UU"), mut = c("GG", "CC"), MFEwt = MFEwt, ensFEwt = ensFEwt)
var_data
View(var_data)
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
?mutSeqs
roxygen2::roxygenize()
roxygen2::roxygenize()
source('~/Documents/BioTools/R/readDMS.R', echo=TRUE)
paths <- c('./data/rawData_UBE2I_solid.txt', './data/rawData_TPK1.txt', "./data/rawData_TECR_2017Q20.txt", "./data/rawData_SUMO1_solid.txt", "./data/rawData_NCS1_2017Q20.txt", "./data/rawData_GDI1_2016Q20.txt", "./data/rawData_CBS_B6-0_oldQ20.txt", "./data/rawData_CALM1.txt")
gene_names <- c('UBE2I', 'TPK1', 'TECR', 'SUMO1', 'NCS1', 'GDI1', 'CBS', 'CALM1')
readDMS(paths, gene_names)
setwd("/Users/Rachel/desktop/Roth Lab/R_DMS")
paths <- c('./data/rawData_UBE2I_solid.txt', './data/rawData_TPK1.txt', "./data/rawData_TECR_2017Q20.txt", "./data/rawData_SUMO1_solid.txt", "./data/rawData_NCS1_2017Q20.txt", "./data/rawData_GDI1_2016Q20.txt", "./data/rawData_CBS_B6-0_oldQ20.txt", "./data/rawData_CALM1.txt")
gene_names <- c('UBE2I', 'TPK1', 'TECR', 'SUMO1', 'NCS1', 'GDI1', 'CBS', 'CALM1')
readDMS(paths, gene_names)
source('~/Documents/BioTools/R/readDMS.R', echo=TRUE)
path <- './data/rawData_UBE2I_solid.txt'
gene_name <- 'UBE2I'
readDMS(path, gene_name)
path <- './data/rawData_UBE2I_solid.txt'
gene_name <- 'UBE2I'
readDMS(path, gene_name)
source('~/Documents/BioTools/R/readDMS.R', echo=TRUE)
path <- './data/rawData_UBE2I_solid.txt'
gene_name <- 'UBE2I'
readDMS(path, gene_name)
roxygen2::roxygenize()
setwd("~/Documents/BioTools")
roxygen2::roxygenise()
setwd("/Users/Rachel/desktop/Roth Lab/R_DMS")
path <- './data/rawData_UBE2I_solid.txt'
gene_name <- 'UBE2I'
raw_data <- readDMS(path, gene_name)
calculateFitnessScores(raw_data)
source('~/Documents/BioTools/R/calculateFitnessScores.R', echo=TRUE)
calculateFitnessScores(raw_data)
head(calculateFitnessScores(raw_data))
setwd("~/Documents/BioTools")
roxygen2::roxygenize()
